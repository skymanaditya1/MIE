@model MecMauritius.Models.ExternalLoginConfirmationViewModel
@{
    ViewBag.Title = "Register";
}

<style>
    .dropdown-menu {
        max-height: 200px;
        overflow: scroll;
    }
</style>

<h2>@ViewBag.Title.</h2>

@using (Html.BeginForm("ExternalLoginConfirmation", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    @Html.AntiForgeryToken()

    <h4>Association Form</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <p class="text-info">
        You've successfully authenticated. Please enter a username for this site below and click the Register button to finish logging in.
    </p>

    <div class="form-group">
        @Html.LabelFor(m => m.Firstname, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Firstname, new { @class = "form-control", style = "width:250px;" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Lastname, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Lastname, new { @class = "form-control", style = "width:250px;" })
        </div>
    </div>

    // Display the categories from the Categories table
    <div class="form-group">
        @Html.Label("Categories", new {@class="col-md-2 control-label"})
        <div class="col-md-10">
            <input class="span2" id="CategoriesForm" name="Category" type="hidden" />
            <div class="dropdown">
                <button id="CategoriesButton" type="button" data-toggle="dropdown" class="btn dropdown-toggle">
                    Select Category
                    <span class="caret"></span>
                </button>
                <ul class="dropdown-menu" id="CategoriesList">
                    @foreach (var category in ViewBag.Categories)
                    {
                        <li><a href="#" name="@category.ID">@category.Name</a></li>
                    }
                </ul>
            </div>
        </div>
    </div>
    
    <div class="form-group">
        @Html.Label("User Role", new {@class="col-md-2 control-label"})
        <div class="col-md-2">
            <input class="span2" id="UserRoleForm" name="UserRoles" type="hidden" />
            <div class="dropdown">
                <button id="UserRoleButton" type="button" class="btn dropdown-toggle" data-toggle="dropdown">
                    Select Role
                    <span class="caret"></span>
                </button>
                <ul class="dropdown-menu" id="UserRoleList">
                    @* Populate user roles dynamically based on category chosen *@
                </ul>
            </div>
        </div>
    </div>

    <div class="form-group" id="ZoneFormGroup">
        @Html.Label("School Zone", new { @class = "col-md-2 control-label" })
        <div class="col-md-2">
            <input type="hidden" id="ZoneForm" name="Zone" class="span2"/>
            <div class="dropdown">
                <button id="ZoneButton" type="button" class="btn dropdown-toggle" data-toggle="dropdown">
                    Select Zone
                    <span class="caret"></span>
                </button>
                <ul class="dropdown-menu" id="ZoneList">
                    @* Populate zones dynamically based on category chosen *@
                </ul>
            </div>
        </div>
    </div>

    <div class="form-group" id="SchoolFormGroup">
        @Html.Label("School", new {@class="col-md-2 control-label"})
        <div class="col-md-2">
            <input type="hidden" id="SchoolForm" name="School" class="span2" />
            <div class="dropdown">
                <button id="SchoolButton" class="btn dropdown-toggle" type="button" data-toggle="dropdown">
                    Select School
                    <span class="caret"></span>
                </button>
                <ul class="dropdown-menu" id="SchoolList">
                    @* Populate schools dynamically based on zone chosen *@
                </ul>
            </div>
        </div>
    </div>

    <link href="@Url.Content("~/Content/themes/base/datepicker.css")" rel="stylesheet" />
    <script src="@Url.Content("~/Scripts/jquery-1.12.4.min.js")"></script>
    <script src="@Url.Content("~/Scripts/jquery-ui-1.12.0.min.js")"></script>
    
    @*<script type="text/javascript">
        $(document).ready(function () {
            $("#Zone").change(function () {
                $("#School").empty();
                return false;
            })
        });
    </script>*@
    
    <div class="form-group">
        @Html.LabelFor(m => m.Birthdate, new { @class = "col-md-2 control-label" })
        <div class="col-md-10">
            @Html.TextBoxFor(m => m.Birthdate, new { @class = "form-control datepicker", placeholder = "Enter Birthdate date here...", style = "width:250px;" })
        </div>
    </div>
    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" class="btn btn-default" value="Register" />
        </div>
    </div>
    <h4>Educator accounts need Admin approval.</h4>
}

<script type="text/javascript">
    $(function () {
        $('.datepicker').datepicker({
            changeMonth: true,
            changeYear: true,
            yearRange: "-110:+0"
        });
    });

    // Method to handle the click on the categories
    $("#CategoriesList li").on('click', function () {
        $('#CategoriesForm').val($(this).children("a").attr("name"));
        // alert("The category chosen is : " + $('#CategoriesForm').val());
        $('#CategoriesButton').html($(this).text());
        // hide zones and schools if the zone chosen is MIE or Other Institutions
        if ($(this).text() === 'MIE' || $(this).text() === 'Other Partner Institutions') {
            // also set the zone and school values as not applicable
            $('#ZoneFormGroup').hide();
            $('#SchoolFormGroup').hide();
            $('#ZoneForm').val("-1");
            $('#SchoolForm').val("-1");
            // alert("The value of zone form is : " + $('#ZoneForm').val() + " and School form is : " + $('#SchoolForm').val());
        }
        else {
            $('#ZoneFormGroup').show();
            $('#SchoolFormGroup').show();
        }
        // ajax request to fetch all user roles
        $.ajax({
            type: 'GET',
            url: '@Url.Action("../Home/GetRolesFromCategories")',
            dataType: 'json',
            data: { categoryid: $("#CategoriesForm").val() },
            success: function (userroles) {
                $('#UserRoleList').empty();
                var roles = [];
                $.each(userroles, function (i, role) {
                    roles.push('<li><a href="#" name="' + role.ID + '">' + role.Name + '</a></li>');
                });
                $('#UserRoleList').append(roles.join(''));
            },
            error: function (ex) {
                alert("Failed to fetch user roles");
            }
        });

        // ajax request to fetch zones 
        $.ajax({
            type: 'GET',
            url: '@Url.Action("../Home/GetZonesFromCategories")',
            dataType: 'json',
            data: { categoryid: $("#CategoriesForm").val() },
            success: function (zones) {
                $('#ZoneList').empty();
                var zonesarray = [];
                $.each(zones, function (i, zone) {
                    zonesarray.push('<li><a href="#" name="' + zone.ID + '">' + zone.Name + '</a></li>');
                });
                $('#ZoneList').append(zonesarray.join(''));
            },
            error: function (ex) {
                alert("There was a problem fetching the zones from the categories");
            }
        });
    });

    // Method to handle the click on the UserRoles
    $('#UserRoleList').on('click', 'li', function () {
        $('#UserRoleForm').val($(this).children("a").attr("name"));
        $('#UserRoleButton').html($(this).text());
    });

    // Method to handle the click on the zones 
    $('#ZoneList').on('click', 'li', function () {
        $('#ZoneForm').val($(this).children("a").attr("name"));
        $('#ZoneButton').html($(this).text());
        // ajax call to fetch the schools for the zone
        $.ajax({
            type: 'GET',
            url: '@Url.Action("../Home/GetSchoolsFromZone")',
            dataType: 'json',
            data: { zoneid: $("#ZoneForm").val() },
            success: function (schools) {
                $('#SchoolList').empty();
                var schoolsarray = [];
                $.each(schools, function (i, school) {
                    schoolsarray.push('<li><a href="#" name="' + school.Id + '">' + school.Name + '</a></li>');
                });
                $('#SchoolList').append(schoolsarray.join(''));
            },
            error: function (ex) {
                alert("There was some problem fetching schools");
            }
        });
    });

    // Method to handle the clicks on the school list
    $('#SchoolList').on('click', 'li', function () {
        $('#SchoolForm').val($(this).children("a").attr("name"));
        // alert("The school chosen is : " + $('#SchoolForm').val());
        $('#SchoolButton').html($(this).text());
    });

</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}